name: DeployWorkflow

on: push

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
            clean: 'true'

      - name: List files in workspace
        run: ls -R

      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/meinPrivateKey
          chmod 400 ~/.ssh/meinPrivateKey
          ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Install Nginx
        run: |
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "sudo apt update -y"
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "sudo apt install nginx -y"

      - name: Copy Files for Docker Build
        run: |
          # Kopiere das Dockerfile in das /home/ubuntu/ Verzeichnis
          scp -i ~/.ssh/meinPrivateKey Dockerfile ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/Dockerfile

          # Kopiere den gesamten frontend-Ordner rekursiv (-r) in das /home/ubuntu/ Verzeichnis
          scp -r -i ~/.ssh/meinPrivateKey frontend ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/frontend
          
      - name: Create and Copy Info File
        run: |
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "mkdir -p ~/meinOrdner"
          scp -i ~/.ssh/meinPrivateKey meinOrdner/info.txt ubuntu@${{ secrets.EC2_IP }}:~/meinOrdner/info.txt

      - name: Check Copied File
        run: |
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "ls -l ~/meinOrdner && head -n 1 ~/meinOrdner/info.txt"

  docker-test-job:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/meinPrivateKey
          chmod 400 ~/.ssh/meinPrivateKey
          ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Install Docker
        run: |
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "sudo apt update -y"
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "sudo apt install docker.io -y"
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "sudo usermod -aG docker ubuntu"

      - name: Build and Run Custom Frontend Container
        run: |
          ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "
          docker build -t mein-frontend /home/ubuntu/
          docker stop mein-frontend-container || true
          docker rm mein-frontend-container || true &&
          docker run -d --name mein-frontend-container -p 8080:80 nginx"

  cowsay-job:
    runs-on: ubuntu-latest
    needs: docker-test-job
    steps:
      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/meinPrivateKey
          chmod 400 ~/.ssh/meinPrivateKey
          ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Cowsay Install
        run: ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "sudo apt update -y && sudo apt install -y cowsay"

      - name: Cowsay Run
        run: ssh -i ~/.ssh/meinPrivateKey ubuntu@${{ secrets.EC2_IP }} "cowsay 'Hello from Marcus of of Github-Actions!'"